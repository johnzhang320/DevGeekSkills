DFS:  
it is part of Non Tail Recursion Call or Tail Recursion Call, DFS means vertical first then horizontal
first we use horizontal such as for loop or left / right to include a recursive calling (vertical)
before recursive calling we add node or result data to a collection object such as array list 
then calling include the start point and source and result 

before horizontal, we put return condition , before it met we save result, after it met, we pop out last
element from result

result condition first 
boundary condition second

start will be A.length finally
 
 
Non Tail Recursion Call: 
 working parts are placed after recursive calling, working part is accepting
 the data poping out from calling stack, therefore is reverse order from pushing data
 working part keep running until return condition met, in other word, working part already run before 
 return condition met
 
Tail Recursion Call: 
 working part is placing before recursive calling, which is pushing data to 
 calling stack, it is proceeding order as pushing data to calling stack
 when return condition met , working part start to run, in other word working part do not run until
 working condition met
 
 